generator client {
  provider = "prisma-client-js"
  output   = "../src/generated/prisma"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id            Int           @id @default(autoincrement())
  email         String        @unique @db.VarChar(255)
  password_hash String        @db.VarChar(255)
  name          String        @db.VarChar(100)
  total_points  Int           @default(0)
  created_at    DateTime      @default(now()) @map("created_at") @db.DateTime(0)
  updated_at    DateTime      @updatedAt @map("updated_at") @db.DateTime(0)

  // Relationships
  activity_logs ActivityLog[]
  user_badges   UserBadge[]

  @@map("users") 
}

model Habit {
  id               Int           @id @default(autoincrement())
  name             String        @unique @db.VarChar(100)
  description      String?       @db.Text
  points_value     Int           @default(10) @map("points_value")
  carbon_saving_kg Decimal       @default(0.00) @map("carbon_saving_kg") @db.Decimal(5, 2)
  waste_saving_kg  Decimal       @default(0.00) @map("waste_saving_kg") @db.Decimal(5, 2)

  // Relationships
  activity_logs ActivityLog[]

  @@map("habits")
}

model ActivityLog {
  id        Int      @id @default(autoincrement())
  user_id   Int      @map("user_id")
  habit_id  Int      @map("habit_id")
  logged_at DateTime @default(now()) @map("logged_at") @db.DateTime(0)
  notes     String?  @db.Text

  // Relationships
  user  User  @relation(fields: [user_id], references: [id])
  habit Habit @relation(fields: [habit_id], references: [id])

  @@map("activity_logs")
}

model Badge {
  id               Int         @id @default(autoincrement())
  name             String      @unique @db.VarChar(100)
  description      String      @db.Text
  image_url        String?     @map("image_url") @db.VarChar(255)
  points_threshold Int         @map("points_threshold")

  // Relationships
  user_badges UserBadge[]

  @@map("badges")
}

model UserBadge {
  id          Int      @id @default(autoincrement())
  user_id     Int      @map("user_id")
  badge_id    Int      @map("badge_id")
  achieved_at DateTime @default(now()) @map("achieved_at") @db.DateTime(0)

  // Relationships
  user  User  @relation(fields: [user_id], references: [id])
  badge Badge @relation(fields: [badge_id], references: [id])

  @@unique([user_id, badge_id]) // A user can earn a specific badge only once

  @@map("user_badges")
}
